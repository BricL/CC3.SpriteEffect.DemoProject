{"version":3,"sources":["file:///Users/kengyulin/Documents/MyProject/CC/CC3.SpriteEffect.DemoProject/extensions/sprite-effect/source/assets/comp/SpriteEffectShadow.ts"],"names":["_decorator","Color","Enum","Material","Vec2","EDITOR_NOT_IN_PREVIEW","SpriteEffectBase","ccclass","property","ShadowType","SpriteEffectShadow","group","name","id","type","tooltip","range","isDirty","idx","_isPropDirty","setDirty","val","shadowType","_shadowType","init","countOfProps","reflashParams","shadowColor","_shadowColor","set","offset","_offset","countOfUsedFloats","getPropsUnionKey","constructor","updateParams","index","propBuffer","_effectColor","r","g","b","a","x","y","initMaterial","technique","LIMITED_BOUND","NORMAL","mat","initialize","effectAsset","defines"],"mappings":"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","sourcesContent":["import { _decorator, Color, Enum, Material, Vec2 } from 'cc';\nimport { DEV, EDITOR_NOT_IN_PREVIEW } from 'cc/env';\nimport { SpriteEffectBase } from './SpriteEffectBase';\n\nconst { ccclass, property } = _decorator;\nexport enum ShadowType {\n    LIMITED_BOUND,\n    NORMAL\n}\n\n@ccclass('SpriteEffectShadow')\nexport class SpriteEffectShadow extends SpriteEffectBase {\n    private static _isPropDirty: boolean[] = [false, false, false];\n\n    protected isDirty(idx: number): boolean {\n        return SpriteEffectShadow._isPropDirty[idx];\n    }\n    \n    protected setDirty(idx: number, val: boolean): void {\n        SpriteEffectShadow._isPropDirty[idx] = val;\n    }\n\n\n    //#region ShadowType\n    @property({ group: { name: \"Setter/Getter\", id: \"1\" }, type: Enum(ShadowType), tooltip: \"陰影模式\" })\n    public set shadowType(val: ShadowType) {\n        this._shadowType = val;\n\n        if (EDITOR_NOT_IN_PREVIEW) {\n            this.init(this.countOfProps);\n            this.reflashParams();\n        } else {\n            this.reflashParams();\n        }\n    }\n\n    public get shadowType(): ShadowType {\n        return this._shadowType;\n    }\n\n    @property\n    private _shadowType: ShadowType = ShadowType.LIMITED_BOUND;\n    //#endregion\n\n\n    //#region ShadowColor\n    @property({ group: { name: \"Setter/Getter\", id: \"1\" }, tooltip: \"陰影顏色\" })\n    public set shadowColor(val: Color) {\n        this._shadowColor.set(val);\n\n        if (EDITOR_NOT_IN_PREVIEW) {\n            this.reflashParams();\n        }\n        else {\n            this.reflashParams();\n        }\n    }\n\n    public get shadowColor(): Color {\n        return this._shadowColor;\n    }\n\n    @property\n    private _shadowColor: Color = new Color(0, 0, 0, 1.0);\n    //#endregion\n\n\n    //#region Offset\n    @property({ group: { name: \"Setter/Getter\", id: \"1\" }, range: [-1, 1, 0.01], tooltip: \"偏移量\" })\n    public set offset(val: Vec2) {\n        this._offset.set(val);\n\n        if (EDITOR_NOT_IN_PREVIEW) {\n            this.reflashParams();\n        }\n        else {\n            this.reflashParams();\n        }\n    }\n\n    public get offset(): Vec2 {\n        return this._offset;\n    }\n\n    @property\n    private _offset: Vec2 = new Vec2(0.1, 0.1);\n    //#endregion\n\n\n    //#region override\n    /**\n     * @override SpriteEffectBase\n     */\n    protected get countOfUsedFloats(): number {\n        return 16;\n    }\n\n    /**\n     * @override SpriteEffectBase\n     */\n    protected getPropsUnionKey(): string {\n        return `${this.constructor.name}_${this._shadowType}`;\n    }\n\n    /**\n     * @override SpriteEffectBase\n     */\n    protected updateParams(index: number, propBuffer: Float32Array): void {\n        propBuffer[index + 0] = this._effectColor.r / 255;\n        propBuffer[index + 1] = this._effectColor.g / 255;\n        propBuffer[index + 2] = this._effectColor.b / 255;\n        propBuffer[index + 3] = this._effectColor.a / 255;\n\n        propBuffer[index + 4] = this._shadowColor.r / 255;\n        propBuffer[index + 5] = this._shadowColor.g / 255;\n        propBuffer[index + 6] = this._shadowColor.b / 255;\n        propBuffer[index + 7] = this._shadowColor.a / 255;\n\n        propBuffer[index + 8] = this._offset.x;\n        propBuffer[index + 9] = this._offset.y;\n    }\n\n    /**\n     * @override SpriteEffectBase\n     */\n    protected initMaterial(): Material {\n        let technique = 0;\n        switch (this._shadowType) {\n            case ShadowType.LIMITED_BOUND:\n                technique = 0;\n                break;\n            case ShadowType.NORMAL:\n                technique = 1;\n                break;\n        }\n\n        let mat = new Material();\n        mat.initialize(\n            {\n                effectAsset: this.effectAsset,\n                defines: {},\n                technique: technique\n            }\n        );\n        return mat;\n    }\n}\n\n"]}