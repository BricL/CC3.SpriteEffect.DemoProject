{"version":3,"sources":["file:///Users/kengyulin/Documents/MyProject/CC/CC3.SpriteEffect.DemoProject/assets/script/RandomColor.ts"],"names":["_decorator","Color","Component","lerp","Sprite","tween","SpriteEffectBase","ccclass","property","RandomColor","type","Number","start","color1","set","Math","random","color2","duration","playTween","sprite","t","dt","to","easing","progress","end","current","ratio","color","effectColor","onComplete","update","deltaTime"],"mappings":"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","sourcesContent":["import { _decorator, Color, Component, lerp, Node, Sprite, tween } from 'cc';\nimport { SpriteEffectColor } from '../../extensions/sprite-effect/source/assets/comp/SpriteEffectColor';\nimport { SpriteEffectBase } from '../../extensions/sprite-effect/source/assets/comp/SpriteEffectBase';\nconst { ccclass, property } = _decorator;\n\n@ccclass('RandomColor')\nexport class RandomColor extends Component {\n    @property({ type: Sprite })\n    public sprite: Sprite | null = null;\n\n    @property({ type: Color })\n    public color1: Color = new Color();\n    @property({ type: Color })\n    public color2: Color = new Color();\n    @property({ type: Number })\n    public duration: number = 1.0;\n\n    start() {\n        this.color1 = new Color().set(Math.random() * 255, Math.random() * 255, Math.random() * 255, 255);\n        this.color2 = new Color().set(Math.random() * 255, Math.random() * 255, Math.random() * 255, 255);\n        this.duration = Math.random() * 3.0 + 1.0;\n        this.playTween();\n    }\n\n    private playTween() {\n        if (this.sprite instanceof SpriteEffectBase) {\n            let t = { dt: 0.0 };\n\n            tween(t).to(this.duration / 2, { dt: 1.0 }, {\n                easing: 'linear',\n                progress: (start: number, end: number, current: number, ratio: number) => {\n                    current = lerp(start, end, ratio);\n                    let color = new Color();\n                    Color.lerp(color, this.color1, this.color2, current);\n                    (this.sprite as SpriteEffectColor).effectColor = color;\n                    return current;\n                }\n            }).to(this.duration / 2, { dt: 0.0 }, {\n                easing: 'linear',\n                progress: (start: number, end: number, current: number, ratio: number) => {\n                    current = lerp(start, end, ratio);\n                    let color = new Color();\n                    Color.lerp(color, this.color1, this.color2, current);\n                    (this.sprite as SpriteEffectColor).effectColor = color;\n                    return current;\n                },\n                onComplete: () => {\n                    this.playTween();\n                }\n            }).start();\n        }\n    }\n\n    update(deltaTime: number) {\n\n    }\n}\n\n"]}