{"version":3,"sources":["file:///Users/kengyulin/Documents/MyProject/CC/CC3.SpriteEffect.Proj/extensions/sprite-effect/source/assets/comp/SpriteEffectColorizing.ts"],"names":["_decorator","Material","EDITOR_NOT_IN_PREVIEW","SpriteEffectBase","ccclass","property","SpriteEffectColorizing","group","name","id","slide","range","tooltip","isDirty","idx","_isPropDirty","setDirty","val","rChannelMin","_rChannelMin","reflashParams","rChannelMax","_rChannelMax","gChannelMin","_gChannelMin","gChannelMax","_gChannelMax","bChannelMin","_bChannelMin","bChannelMax","_bChannelMax","countOfUsedFloats","getPropsUnionKey","constructor","_is2Din3D","updateParams","index","propBuffer","_effectColor","r","g","b","a","initMaterial","mat","initialize","effectAsset","defines","technique"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,Q,OAAAA,Q;;AACZC,MAAAA,qB,UAAAA,qB;;AACAC,MAAAA,gB,iBAAAA,gB;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;;wCAIjBM,sB,WADZF,OAAO,CAAC,wBAAD,C,UAcHC,QAAQ,CAAC;AAAEE,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAE,eAAR;AAAyBC,UAAAA,EAAE,EAAE;AAA7B,SAAT;AAA6CC,QAAAA,KAAK,EAAE,IAApD;AAA0DC,QAAAA,KAAK,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,IAAX,CAAjE;AAAmFC,QAAAA,OAAO,EAAE;AAA5F,OAAD,C,UAgBRP,QAAQ,CAAC;AAAEE,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAE,eAAR;AAAyBC,UAAAA,EAAE,EAAE;AAA7B,SAAT;AAA6CC,QAAAA,KAAK,EAAE,IAApD;AAA0DC,QAAAA,KAAK,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,IAAX,CAAjE;AAAmFC,QAAAA,OAAO,EAAE;AAA5F,OAAD,C,UAwBRP,QAAQ,CAAC;AAAEE,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAE,eAAR;AAAyBC,UAAAA,EAAE,EAAE;AAA7B,SAAT;AAA6CC,QAAAA,KAAK,EAAE,IAApD;AAA0DC,QAAAA,KAAK,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,IAAX,CAAjE;AAAmFC,QAAAA,OAAO,EAAE;AAA5F,OAAD,C,UAgBRP,QAAQ,CAAC;AAAEE,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAE,eAAR;AAAyBC,UAAAA,EAAE,EAAE;AAA7B,SAAT;AAA6CC,QAAAA,KAAK,EAAE,IAApD;AAA0DC,QAAAA,KAAK,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,IAAX,CAAjE;AAAmFC,QAAAA,OAAO,EAAE;AAA5F,OAAD,C,UAwBRP,QAAQ,CAAC;AAAEE,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAE,eAAR;AAAyBC,UAAAA,EAAE,EAAE;AAA7B,SAAT;AAA6CC,QAAAA,KAAK,EAAE,IAApD;AAA0DC,QAAAA,KAAK,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,IAAX,CAAjE;AAAmFC,QAAAA,OAAO,EAAE;AAA5F,OAAD,C,UAgBRP,QAAQ,CAAC;AAAEE,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAE,eAAR;AAAyBC,UAAAA,EAAE,EAAE;AAA7B,SAAT;AAA6CC,QAAAA,KAAK,EAAE,IAApD;AAA0DC,QAAAA,KAAK,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,IAAX,CAAjE;AAAmFC,QAAAA,OAAO,EAAE;AAA5F,OAAD,C,sCA9Gb,MACaN,sBADb;AAAA;AAAA,gDAC6D;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAG/CO,QAAAA,OAAO,CAACC,GAAD,EAAuB;AACpC,iBAAOR,sBAAsB,CAACS,YAAvB,CAAoCD,GAApC,CAAP;AACH;;AAESE,QAAAA,QAAQ,CAACF,GAAD,EAAcG,GAAd,EAAkC;AAChDX,UAAAA,sBAAsB,CAACS,YAAvB,CAAoCD,GAApC,IAA2CG,GAA3C;AACH,SATwD,CAYzD;;;AAEsB,YAAXC,WAAW,CAACD,GAAD,EAAc;AAChC,eAAKE,YAAL,GAAoBF,GAApB;;AAEA,cAAIf,qBAAJ,EAA2B;AACvB,iBAAKkB,aAAL;AACH,WAFD,MAGK;AACD,iBAAKA,aAAL;AACH;AACJ;;AAEqB,YAAXF,WAAW,GAAW;AAC7B,iBAAO,KAAKC,YAAZ;AACH;;AAGqB,YAAXE,WAAW,CAACJ,GAAD,EAAc;AAChC,eAAKK,YAAL,GAAoBL,GAApB;;AAEA,cAAIf,qBAAJ,EAA2B;AACvB,iBAAKkB,aAAL;AACH,WAFD,MAGK;AACD,iBAAKA,aAAL;AACH;AACJ;;AAEqB,YAAXC,WAAW,GAAW;AAC7B,iBAAO,KAAKC,YAAZ;AACH;;AAMD;AAGA;AAEsB,YAAXC,WAAW,CAACN,GAAD,EAAc;AAChC,eAAKO,YAAL,GAAoBP,GAApB;;AAEA,cAAIf,qBAAJ,EAA2B;AACvB,iBAAKkB,aAAL;AACH,WAFD,MAGK;AACD,iBAAKA,aAAL;AACH;AACJ;;AAEqB,YAAXG,WAAW,GAAW;AAC7B,iBAAO,KAAKC,YAAZ;AACH;;AAGqB,YAAXC,WAAW,CAACR,GAAD,EAAc;AAChC,eAAKS,YAAL,GAAoBT,GAApB;;AAEA,cAAIf,qBAAJ,EAA2B;AACvB,iBAAKkB,aAAL;AACH,WAFD,MAGK;AACD,iBAAKA,aAAL;AACH;AACJ;;AAEqB,YAAXK,WAAW,GAAW;AAC7B,iBAAO,KAAKC,YAAZ;AACH;;AAMD;AAGA;AAEsB,YAAXC,WAAW,CAACV,GAAD,EAAc;AAChC,eAAKW,YAAL,GAAoBX,GAApB;;AAEA,cAAIf,qBAAJ,EAA2B;AACvB,iBAAKkB,aAAL;AACH,WAFD,MAGK;AACD,iBAAKA,aAAL;AACH;AACJ;;AAEqB,YAAXO,WAAW,GAAW;AAC7B,iBAAO,KAAKC,YAAZ;AACH;;AAGqB,YAAXC,WAAW,CAACZ,GAAD,EAAc;AAChC,eAAKa,YAAL,GAAoBb,GAApB;;AAEA,cAAIf,qBAAJ,EAA2B;AACvB,iBAAKkB,aAAL;AACH,WAFD,MAGK;AACD,iBAAKA,aAAL;AACH;AACJ;;AAEqB,YAAXS,WAAW,GAAW;AAC7B,iBAAO,KAAKC,YAAZ;AACH;;AAMD;AAGA;;AACA;AACJ;AACA;AACmC,YAAjBC,iBAAiB,GAAW;AACtC;AACA,iBAAO,EAAP;AACH;AAED;AACJ;AACA;;;AACcC,QAAAA,gBAAgB,GAAW;AACjC,iBAAU,KAAKC,WAAL,CAAiBzB,IAA3B,SAAmC,KAAK0B,SAAxC;AACH;AAED;AACJ;AACA;;;AACcC,QAAAA,YAAY,CAACC,KAAD,EAAgBC,UAAhB,EAAgD;AAClEA,UAAAA,UAAU,CAACD,KAAK,GAAG,CAAT,CAAV,GAAwB,KAAKE,YAAL,CAAkBC,CAAlB,GAAsB,GAA9C;AACAF,UAAAA,UAAU,CAACD,KAAK,GAAG,CAAT,CAAV,GAAwB,KAAKE,YAAL,CAAkBE,CAAlB,GAAsB,GAA9C;AACAH,UAAAA,UAAU,CAACD,KAAK,GAAG,CAAT,CAAV,GAAwB,KAAKE,YAAL,CAAkBG,CAAlB,GAAsB,GAA9C;AACAJ,UAAAA,UAAU,CAACD,KAAK,GAAG,CAAT,CAAV,GAAwB,KAAKE,YAAL,CAAkBI,CAAlB,GAAsB,GAA9C;AAEAL,UAAAA,UAAU,CAACD,KAAK,GAAG,CAAT,CAAV,GAAwB,KAAKjB,YAA7B;AACAkB,UAAAA,UAAU,CAACD,KAAK,GAAG,CAAT,CAAV,GAAwB,KAAKd,YAA7B;AACAe,UAAAA,UAAU,CAACD,KAAK,GAAG,CAAT,CAAV,GAAwB,KAAKZ,YAA7B;AACAa,UAAAA,UAAU,CAACD,KAAK,GAAG,CAAT,CAAV,GAAwB,KAAKV,YAA7B;AAEAW,UAAAA,UAAU,CAACD,KAAK,GAAG,CAAT,CAAV,GAAwB,KAAKR,YAA7B;AACAS,UAAAA,UAAU,CAACD,KAAK,GAAG,CAAT,CAAV,GAAwB,KAAKN,YAA7B;AACH;AAED;AACJ;AACA;;;AACca,QAAAA,YAAY,GAAa;AAC/B,cAAIC,GAAG,GAAG,IAAI3C,QAAJ,EAAV;AACA2C,UAAAA,GAAG,CAACC,UAAJ,CACI;AACIC,YAAAA,WAAW,EAAE,KAAKA,WADtB;AAEIC,YAAAA,OAAO,EAAE,EAFb;AAGIC,YAAAA,SAAS,EAAE,KAAKd,SAAL,GAAiB,CAAjB,GAAqB;AAHpC,WADJ;AAOA,iBAAOU,GAAP;AACH;;AAnLwD,O,UAC1C7B,Y,GAA0B,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,C,iZA4CxCV,Q;;;;;iBAC8B,C;;uFAC9BA,Q;;;;;iBAC8B,C;;+YAqC9BA,Q;;;;;iBAC8B,C;;uFAC9BA,Q;;;;;iBAC8B,C;;+YAqC9BA,Q;;;;;iBAC8B,C;;uFAC9BA,Q;;;;;iBAC8B,C","sourcesContent":["import { _decorator, Material } from 'cc';\nimport { EDITOR_NOT_IN_PREVIEW } from 'cc/env';\nimport { SpriteEffectBase } from './SpriteEffectBase';\nconst { ccclass, property } = _decorator;\n\n\n@ccclass('SpriteEffectColorizing')\nexport class SpriteEffectColorizing extends SpriteEffectBase {\n    private static _isPropDirty: boolean[] = [false, false, false];\n\n    protected isDirty(idx: number): boolean {\n        return SpriteEffectColorizing._isPropDirty[idx];\n    }\n    \n    protected setDirty(idx: number, val: boolean): void {\n        SpriteEffectColorizing._isPropDirty[idx] = val;\n    }\n\n\n    // #region rChannel\n    @property({ group: { name: \"Setter/Getter\", id: \"1\" }, slide: true, range: [0.0, 1.0, 0.01], tooltip: '指定R通道Remap顏色最小值' })\n    public set rChannelMin(val: number) {\n        this._rChannelMin = val;\n\n        if (EDITOR_NOT_IN_PREVIEW) {\n            this.reflashParams();\n        }\n        else {\n            this.reflashParams();\n        }\n    }\n\n    public get rChannelMin(): number {\n        return this._rChannelMin;\n    }\n\n    @property({ group: { name: \"Setter/Getter\", id: \"1\" }, slide: true, range: [0.0, 1.0, 0.01], tooltip: '指定R通道Remap顏色最大值' })\n    public set rChannelMax(val: number) {\n        this._rChannelMax = val;\n\n        if (EDITOR_NOT_IN_PREVIEW) {\n            this.reflashParams();\n        }\n        else {\n            this.reflashParams();\n        }\n    }\n\n    public get rChannelMax(): number {\n        return this._rChannelMax;\n    }\n\n    @property\n    private _rChannelMin: number = 0;\n    @property\n    private _rChannelMax: number = 1;\n    // #endregion\n\n\n    // #region gChannel\n    @property({ group: { name: \"Setter/Getter\", id: \"1\" }, slide: true, range: [0.0, 1.0, 0.01], tooltip: '指定G通道Remap顏色最小值' })\n    public set gChannelMin(val: number) {\n        this._gChannelMin = val;\n\n        if (EDITOR_NOT_IN_PREVIEW) {\n            this.reflashParams();\n        }\n        else {\n            this.reflashParams();\n        }\n    }\n    \n    public get gChannelMin(): number {\n        return this._gChannelMin;\n    }\n\n    @property({ group: { name: \"Setter/Getter\", id: \"1\" }, slide: true, range: [0.0, 1.0, 0.01], tooltip: '指定G通道填Remap顏色最大值' })\n    public set gChannelMax(val: number) {\n        this._gChannelMax = val;\n\n        if (EDITOR_NOT_IN_PREVIEW) {\n            this.reflashParams();\n        }\n        else {\n            this.reflashParams();\n        }\n    }\n    \n    public get gChannelMax(): number {\n        return this._gChannelMax;\n    }\n\n    @property\n    private _gChannelMin: number = 0;\n    @property\n    private _gChannelMax: number = 1;\n    // #endregion\n\n\n    // #region bChannel\n    @property({ group: { name: \"Setter/Getter\", id: \"1\" }, slide: true, range: [0.0, 1.0, 0.01], tooltip: '指定B通道Remap顏色最小值' })\n    public set bChannelMin(val: number) {\n        this._bChannelMin = val;\n\n        if (EDITOR_NOT_IN_PREVIEW) {\n            this.reflashParams();\n        }\n        else {\n            this.reflashParams();\n        }\n    }\n    \n    public get bChannelMin(): number {\n        return this._bChannelMin;\n    }\n\n    @property({ group: { name: \"Setter/Getter\", id: \"1\" }, slide: true, range: [0.0, 1.0, 0.01], tooltip: '指定B通道Remap顏色最大值' })\n    public set bChannelMax(val: number) {\n        this._bChannelMax = val;\n\n        if (EDITOR_NOT_IN_PREVIEW) {\n            this.reflashParams();\n        }\n        else {\n            this.reflashParams();\n        }\n    }\n    \n    public get bChannelMax(): number {\n        return this._bChannelMax;\n    }\n\n    @property\n    private _bChannelMin: number = 0;\n    @property\n    private _bChannelMax: number = 1;\n    // #endregion\n\n\n    //#region override\n    /**\n     * @override SpriteEffectBase\n     */\n    protected get countOfUsedFloats(): number {\n        //return 10; // 手機上非2次幂的紋理會報錯\n        return 16;\n    }\n\n    /**\n     * @override SpriteEffectBase\n     */\n    protected getPropsUnionKey(): string {\n        return `${this.constructor.name}_${this._is2Din3D}`;\n    }\n\n    /**\n     * @override SpriteEffectBase\n     */\n    protected updateParams(index: number, propBuffer: Float32Array): void {\n        propBuffer[index + 0] = this._effectColor.r / 255;\n        propBuffer[index + 1] = this._effectColor.g / 255;\n        propBuffer[index + 2] = this._effectColor.b / 255;\n        propBuffer[index + 3] = this._effectColor.a / 255;\n\n        propBuffer[index + 4] = this._rChannelMin;\n        propBuffer[index + 5] = this._rChannelMax;\n        propBuffer[index + 6] = this._gChannelMin;\n        propBuffer[index + 7] = this._gChannelMax;\n        \n        propBuffer[index + 8] = this._bChannelMin;\n        propBuffer[index + 9] = this._bChannelMax;\n    }\n\n    /**\n     * @override SpriteEffectgftf55rfrrftfgt6gyredtBase\n     */\n    protected initMaterial(): Material {\n        let mat = new Material();\n        mat.initialize(\n            {\n                effectAsset: this.effectAsset,\n                defines: {},\n                technique: this._is2Din3D ? 1 : 0\n            }\n        );\n        return mat;\n    }\n}\n\n"]}