{"version":3,"sources":["file:///Users/kengyulin/Documents/MyProject/CC/CC3.SpriteEffect.Proj/extensions/sprite-effect/source/assets/comp/SpriteEffectWaterWave.ts"],"names":["_decorator","Material","EDITOR_NOT_IN_PREVIEW","SpriteEffectBase","ccclass","property","SpriteEffectWaterWave","group","name","id","slide","range","tooltip","isDirty","idx","_isPropDirty","setDirty","val","offset","_offset","reflashParams","waveWidth","_waveWidth","waveHeight","_waveHeight","waveSpeed","_waveSpeed","countOfUsedFloats","getPropsUnionKey","constructor","_is2Din3D","updateParams","index","propBuffer","_effectColor","r","g","b","a","initMaterial","mat","initialize","effectAsset","defines","technique"],"mappings":"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","sourcesContent":["import { _decorator, Material } from 'cc';\nimport { EDITOR_NOT_IN_PREVIEW } from 'cc/env';\nimport { SpriteEffectBase } from './SpriteEffectBase';\nconst { ccclass, property } = _decorator;\n\n\n@ccclass('SpriteEffectWaterWave')\nexport class SpriteEffectWaterWave extends SpriteEffectBase {\n    private static _isPropDirty: boolean[] = [false, false, false];\n\n    protected isDirty(idx: number): boolean {\n        return SpriteEffectWaterWave._isPropDirty[idx];\n    }\n    \n    protected setDirty(idx: number, val: boolean): void {\n        SpriteEffectWaterWave._isPropDirty[idx] = val;\n    }\n\n    //#region offset\n    @property({ group: { name: \"Setter/Getter\", id: \"1\" }, slide: true, range: [0, 1, 0.01], tooltip: '偏移量' })\n    public set offset(val: number) {\n        this._offset = val;\n\n        if (EDITOR_NOT_IN_PREVIEW) {\n            this.reflashParams();\n        } else {\n            this.reflashParams();\n        }\n    }\n\n    public get offset(): number {\n        return this._offset;\n    }\n\n    @property\n    private _offset: number = 0.5;\n    //#endregion\n\n\n    //#region waveWidth\n    @property({ group: { name: \"Setter/Getter\", id: \"1\" }, slide: true, range: [0, 20, 0.01], tooltip: '水波寬' })\n    public set waveWidth(val: number) {\n        this._waveWidth = val;\n\n        if (EDITOR_NOT_IN_PREVIEW) {\n            this.reflashParams();\n        } else {\n            this.reflashParams();\n        }\n    }\n\n    public get waveWidth(): number {\n        return this._waveWidth;\n    }\n\n    @property\n    private _waveWidth: number = 20.0;\n    //#endregion\n\n\n    //#region waveHeight\n    @property({ group: { name: \"Setter/Getter\", id: \"1\" }, slide: true, range: [0, 1, 0.01], tooltip: '水波高' })\n    public set waveHeight(val: number) {\n        this._waveHeight = val;\n\n        if (EDITOR_NOT_IN_PREVIEW) {\n            this.reflashParams();\n        } else {\n            this.reflashParams();\n        }\n    }\n\n    public get waveHeight(): number {\n        return this._waveHeight;\n    }\n\n    @property\n    private _waveHeight: number = 0.01;\n    //#endregion\n\n\n    //#region waveSpeed\n    @property({ group: { name: \"Setter/Getter\", id: \"1\" }, slide: true, range: [0, 20, 0.01], tooltip: '速度' })\n    public set waveSpeed(val: number) {\n        this._waveSpeed = val;\n\n        if (EDITOR_NOT_IN_PREVIEW) {\n            this.reflashParams();\n        } else {\n            this.reflashParams();\n        }\n    }\n\n    public get waveSpeed(): number {\n        return this._waveSpeed;\n    }\n\n    @property\n    private _waveSpeed: number = 10.0;\n    //#endregion\n\n\n    //#region override\n    /**\n     * @override SpriteEffectBase\n     */\n    protected get countOfUsedFloats(): number {\n        return 8;\n    }\n\n    /**\n     * @override SpriteEffectBase\n     */\n    protected getPropsUnionKey(): string {\n        return `${this.constructor.name}_${this._is2Din3D}`;\n    }\n\n    /**\n     * @override SpriteEffectBase\n     */\n    protected updateParams(index: number, propBuffer: Float32Array): void {\n        propBuffer[index + 0] = this._effectColor.r / 255;\n        propBuffer[index + 1] = this._effectColor.g / 255;\n        propBuffer[index + 2] = this._effectColor.b / 255;\n        propBuffer[index + 3] = this._effectColor.a / 255;\n\n        propBuffer[index + 4] = this._offset;\n        propBuffer[index + 5] = this._waveWidth;\n        propBuffer[index + 6] = this._waveHeight;\n        propBuffer[index + 7] = this._waveSpeed;\n    }\n\n    /**\n     * @override SpriteEffectBase\n     */\n    protected initMaterial(): Material {\n        let mat = new Material();\n        mat.initialize(\n            {\n                effectAsset: this.effectAsset,\n                defines: {},\n                technique: this._is2Din3D ? 1 : 0\n            }\n        );\n        return mat;\n    }\n}\n\n"]}