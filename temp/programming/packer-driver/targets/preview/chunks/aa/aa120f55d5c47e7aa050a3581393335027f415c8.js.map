{"version":3,"sources":["file:///Users/kengyulin/Documents/MyProject/CC/CC3.SpriteEffect.DemoProject/extensions/sprite-effect/source/assets/comp/SpriteEffectColor.ts"],"names":["_decorator","Enum","Material","UITransform","Vec2","EDITOR_NOT_IN_PREVIEW","SpriteEffectBase","ccclass","property","ToneMode","ColorMode","BlurMode","SpriteEffectColor","group","name","id","type","tooltip","slide","range","isDirty","idx","_isPropDirty","setDirty","val","toneMode","_toneMode","init","countOfProps","reflashParams","toneFactor","_toneFactor","colorMode","_colorMode","colorFactor","_colorFactor","blurMode","_blurMode","blurFactor","_blurFactor","countOfUsedFloats","getPropsUnionKey","unionKey","constructor","_is2Din3D","updateParams","index","propBuffer","baseUV","getUV","spriteFrame","uv","blurTextureSize","x","Math","floor","width","z","y","height","w","node","getComponent","contentSize","_effectColor","r","g","b","a","initMaterial","mat","define_macro","USE_BLUR","IS_GRAY","IS_NEGA","IS_SEPIA","IS_ADD","IS_SUB","IS_FILL","IS_MULT","GRAY","NEGA","SEPIA","ADD","SUB","FILL","MULT","NONE","GAUSSIAN","initialize","effectAsset","defines","technique","NORMAL"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,I,OAAAA,I;AAAWC,MAAAA,Q,OAAAA,Q;AAAqBC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,I,OAAAA,I;;AACzDC,MAAAA,qB,UAAAA,qB;;AACAC,MAAAA,gB,iBAAAA,gB;;;;;;;;;OAEH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBR,U;;0BAElBS,Q,0BAAAA,Q;AAAAA,QAAAA,Q,CAAAA,Q;AAAAA,QAAAA,Q,CAAAA,Q;AAAAA,QAAAA,Q,CAAAA,Q;AAAAA,QAAAA,Q,CAAAA,Q;eAAAA,Q;;;2BAOAC,S,0BAAAA,S;AAAAA,QAAAA,S,CAAAA,S;AAAAA,QAAAA,S,CAAAA,S;AAAAA,QAAAA,S,CAAAA,S;AAAAA,QAAAA,S,CAAAA,S;eAAAA,S;;;0BAOAC,Q,0BAAAA,Q;AAAAA,QAAAA,Q,CAAAA,Q;AAAAA,QAAAA,Q,CAAAA,Q;eAAAA,Q;;;mCAMCC,iB,WADZL,OAAO,CAAC,mBAAD,C,UAaHC,QAAQ,CAAC;AAAEK,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAE,eAAR;AAAyBC,UAAAA,EAAE,EAAE;AAA7B,SAAT;AAA6CC,QAAAA,IAAI,EAAEf,IAAI,CAACQ,QAAD,CAAvD;AAAmEQ,QAAAA,OAAO,EAAE;AAA5E,OAAD,C,UAgBRT,QAAQ,CAAC;AAAEQ,QAAAA,IAAI,EAAEf,IAAI,CAACQ,QAAD;AAAZ,OAAD,C,UAKRD,QAAQ,CAAC;AAAEK,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAE,eAAR;AAAyBC,UAAAA,EAAE,EAAE;AAA7B,SAAT;AAA6CG,QAAAA,KAAK,EAAE,IAApD;AAA0DC,QAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,IAAP,CAAjE;AAA+EF,QAAAA,OAAO,EAAE;AAAxF,OAAD,C,UAoBRT,QAAQ,CAAC;AAAEK,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAE,eAAR;AAAyBC,UAAAA,EAAE,EAAE;AAA7B,SAAT;AAA6CC,QAAAA,IAAI,EAAEf,IAAI,CAACS,SAAD,CAAvD;AAAoEO,QAAAA,OAAO,EAAE;AAA7E,OAAD,C,UAgBRT,QAAQ,CAAC;AAAEQ,QAAAA,IAAI,EAAEf,IAAI,CAACS,SAAD;AAAZ,OAAD,C,UAKRF,QAAQ,CAAC;AAAEK,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAE,eAAR;AAAyBC,UAAAA,EAAE,EAAE;AAA7B,SAAT;AAA6CG,QAAAA,KAAK,EAAE,IAApD;AAA0DC,QAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,IAAP,CAAjE;AAA+EF,QAAAA,OAAO,EAAE;AAAxF,OAAD,C,UAoBRT,QAAQ,CAAC;AAAEK,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAE,eAAR;AAAyBC,UAAAA,EAAE,EAAE;AAA7B,SAAT;AAA6CC,QAAAA,IAAI,EAAEf,IAAI,CAACU,QAAD,CAAvD;AAAmEM,QAAAA,OAAO,EAAE;AAA5E,OAAD,C,UAgBRT,QAAQ,CAAC;AAAEQ,QAAAA,IAAI,EAAEf,IAAI,CAACU,QAAD;AAAZ,OAAD,C,WAKRH,QAAQ,CAAC;AAAEK,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAE,eAAR;AAAyBC,UAAAA,EAAE,EAAE;AAA7B,SAAT;AAA6CG,QAAAA,KAAK,EAAE,IAApD;AAA0DC,QAAAA,KAAK,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,IAAX,CAAjE;AAAmFF,QAAAA,OAAO,EAAE;AAA5F,OAAD,C,sCApHb,MACaL,iBADb;AAAA;AAAA,gDACwD;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAG1CQ,QAAAA,OAAO,CAACC,GAAD,EAAuB;AACpC,iBAAOT,iBAAiB,CAACU,YAAlB,CAA+BD,GAA/B,CAAP;AACH;;AAESE,QAAAA,QAAQ,CAACF,GAAD,EAAcG,GAAd,EAAkC;AAChDZ,UAAAA,iBAAiB,CAACU,YAAlB,CAA+BD,GAA/B,IAAsCG,GAAtC;AACH,SATmD,CAWpD;;;AAEmB,YAARC,QAAQ,CAACD,GAAD,EAAgB;AAC/B,eAAKE,SAAL,GAAiBF,GAAjB;;AAEA,cAAInB,qBAAJ,EAA2B;AACvB,iBAAKsB,IAAL,CAAU,KAAKC,YAAf;AACA,iBAAKC,aAAL;AACH,WAHD,MAGO;AACH,iBAAKA,aAAL;AACH;AACJ;;AAEkB,YAARJ,QAAQ,GAAa;AAC5B,iBAAO,KAAKC,SAAZ;AACH;;AAID;AAEA;AAEqB,YAAVI,UAAU,CAACN,GAAD,EAAc;AAC/B,eAAKO,WAAL,GAAmBP,GAAnB;;AAEA,cAAInB,qBAAJ,EAA2B;AACvB,iBAAKwB,aAAL;AACH,WAFD,MAEO;AACH,iBAAKA,aAAL;AACH;AACJ;;AAEoB,YAAVC,UAAU,GAAW;AAC5B,iBAAO,KAAKC,WAAZ;AACH;;AAID;AAEA;AAEoB,YAATC,SAAS,CAACR,GAAD,EAAiB;AACjC,eAAKS,UAAL,GAAkBT,GAAlB;;AAEA,cAAInB,qBAAJ,EAA2B;AACvB,iBAAKsB,IAAL,CAAU,KAAKC,YAAf;AACA,iBAAKC,aAAL;AACH,WAHD,MAGO;AACH,iBAAKA,aAAL;AACH;AACJ;;AAEmB,YAATG,SAAS,GAAc;AAC9B,iBAAO,KAAKC,UAAZ;AACH;;AAID;AAEA;AAEsB,YAAXC,WAAW,CAACV,GAAD,EAAc;AAChC,eAAKW,YAAL,GAAoBX,GAApB;;AAEA,cAAInB,qBAAJ,EAA2B;AACvB,iBAAKwB,aAAL;AACH,WAFD,MAEO;AACH,iBAAKA,aAAL;AACH;AACJ;;AAEqB,YAAXK,WAAW,GAAW;AAC7B,iBAAO,KAAKC,YAAZ;AACH;;AAID;AAEA;AAEmB,YAARC,QAAQ,CAACZ,GAAD,EAAgB;AAC/B,eAAKa,SAAL,GAAiBb,GAAjB;;AAEA,cAAInB,qBAAJ,EAA2B;AACvB,iBAAKsB,IAAL,CAAU,KAAKC,YAAf;AACA,iBAAKC,aAAL;AACH,WAHD,MAGO;AACH,iBAAKA,aAAL;AACH;AACJ;;AAEkB,YAARO,QAAQ,GAAa;AAC5B,iBAAO,KAAKC,SAAZ;AACH;;AAID;AAEA;AAEqB,YAAVC,UAAU,CAACd,GAAD,EAAc;AAC/B,eAAKe,WAAL,GAAmBf,GAAnB;;AAEA,cAAInB,qBAAJ,EAA2B;AACvB,iBAAKwB,aAAL;AACH,WAFD,MAEO;AACH,iBAAKA,aAAL;AACH;AACJ;;AAEoB,YAAVS,UAAU,GAAW;AAC5B,iBAAO,KAAKC,WAAZ;AACH;;AAID;AAGA;AAC+B,YAAjBC,iBAAiB,GAAW;AACtC,iBAAO,EAAP;AACH;;AAESC,QAAAA,gBAAgB,GAAW;AACjC,cAAMC,QAAQ,GAAM,KAAKC,WAAL,CAAiB7B,IAAvB,SAA+B,KAAK8B,SAApC,SAAiD,KAAKlB,SAAtD,SAAmE,KAAKO,UAAxE,SAAsF,KAAKI,SAAzG;AACA,iBAAOK,QAAP;AACH;AAED;AACJ;AACA;;;AACcG,QAAAA,YAAY,CAACC,KAAD,EAAgBC,UAAhB,EAAgD;AAClE,cAAMC,MAAM,GAAG,KAAKC,KAAL,CAAW,KAAKC,WAAL,CAAkBC,EAA7B,CAAf;AAEA,cAAIC,eAAe,GAAG,IAAIhD,IAAJ,CAAS,GAAT,EAAc,GAAd,CAAtB;;AACA,cAAI,KAAK8C,WAAT,EAAsB;AAClBE,YAAAA,eAAe,CAACC,CAAhB,GAAoBC,IAAI,CAACC,KAAL,CAAW,KAAKL,WAAL,CAAiBM,KAAjB,GAAyBR,MAAM,CAACS,CAA3C,CAApB;AACAL,YAAAA,eAAe,CAACM,CAAhB,GAAoBJ,IAAI,CAACC,KAAL,CAAW,KAAKL,WAAL,CAAiBS,MAAjB,GAA0BX,MAAM,CAACY,CAA5C,CAApB;AACH,WAHD,MAIK;AACDR,YAAAA,eAAe,CAACC,CAAhB,GAAoB,KAAKQ,IAAL,CAAUC,YAAV,CAAuB3D,WAAvB,EAAqC4D,WAArC,CAAiDP,KAArE;AACAJ,YAAAA,eAAe,CAACM,CAAhB,GAAoB,KAAKG,IAAL,CAAUC,YAAV,CAAuB3D,WAAvB,EAAqC4D,WAArC,CAAiDJ,MAArE;AACH;;AAEDZ,UAAAA,UAAU,CAACD,KAAK,GAAG,CAAT,CAAV,GAAwB,KAAKkB,YAAL,CAAkBC,CAAlB,GAAsB,GAA9C;AACAlB,UAAAA,UAAU,CAACD,KAAK,GAAG,CAAT,CAAV,GAAwB,KAAKkB,YAAL,CAAkBE,CAAlB,GAAsB,GAA9C;AACAnB,UAAAA,UAAU,CAACD,KAAK,GAAG,CAAT,CAAV,GAAwB,KAAKkB,YAAL,CAAkBG,CAAlB,GAAsB,GAA9C;AACApB,UAAAA,UAAU,CAACD,KAAK,GAAG,CAAT,CAAV,GAAwB,KAAKkB,YAAL,CAAkBI,CAAlB,GAAsB,GAA9C;AAEArB,UAAAA,UAAU,CAACD,KAAK,GAAG,CAAT,CAAV,GAAwBE,MAAM,CAACK,CAA/B;AACAN,UAAAA,UAAU,CAACD,KAAK,GAAG,CAAT,CAAV,GAAwBE,MAAM,CAACU,CAA/B;AACAX,UAAAA,UAAU,CAACD,KAAK,GAAG,CAAT,CAAV,GAAwBE,MAAM,CAACS,CAA/B;AACAV,UAAAA,UAAU,CAACD,KAAK,GAAG,CAAT,CAAV,GAAwBE,MAAM,CAACY,CAA/B;AAEAb,UAAAA,UAAU,CAACD,KAAK,GAAG,CAAT,CAAV,GAAwBM,eAAe,CAACC,CAAxC;AACAN,UAAAA,UAAU,CAACD,KAAK,GAAG,CAAT,CAAV,GAAwBM,eAAe,CAACM,CAAxC,CAxBkE,CAyBlE;AACA;;AAEAX,UAAAA,UAAU,CAACD,KAAK,GAAG,EAAT,CAAV,GAAyB,KAAKhB,UAA9B;AACAiB,UAAAA,UAAU,CAACD,KAAK,GAAG,EAAT,CAAV,GAAyB,KAAKZ,WAA9B;AACAa,UAAAA,UAAU,CAACD,KAAK,GAAG,EAAT,CAAV,GAAyB,KAAKR,UAA9B,CA9BkE,CA+BlE;AACH;AAED;AACJ;AACA;;;AACc+B,QAAAA,YAAY,GAAa;AAC/B,cAAIC,GAAG,GAAG,IAAIpE,QAAJ,EAAV;AACA,cAAIqE,YAAY,GAAG;AACfC,YAAAA,QAAQ,EAAE,KADK;AAEfC,YAAAA,OAAO,EAAE,KAFM;AAGfC,YAAAA,OAAO,EAAE,KAHM;AAIfC,YAAAA,QAAQ,EAAE,KAJK;AAKfC,YAAAA,MAAM,EAAE,KALO;AAMfC,YAAAA,MAAM,EAAE,KANO;AAOfC,YAAAA,OAAO,EAAE,KAPM;AAQfC,YAAAA,OAAO,EAAE;AARM,WAAnB;;AAWA,kBAAQ,KAAKrD,SAAb;AACI,iBAAKjB,QAAQ,CAACuE,IAAd;AACIT,cAAAA,YAAY,CAACE,OAAb,GAAuB,IAAvB;AACA;;AACJ,iBAAKhE,QAAQ,CAACwE,IAAd;AACIV,cAAAA,YAAY,CAACG,OAAb,GAAuB,IAAvB;AACA;;AACJ,iBAAKjE,QAAQ,CAACyE,KAAd;AACIX,cAAAA,YAAY,CAACI,QAAb,GAAwB,IAAxB;AACA;AATR;;AAUC;;AAED,kBAAQ,KAAK1C,UAAb;AACI,iBAAKvB,SAAS,CAACyE,GAAf;AACIZ,cAAAA,YAAY,CAACK,MAAb,GAAsB,IAAtB;AACA;;AACJ,iBAAKlE,SAAS,CAAC0E,GAAf;AACIb,cAAAA,YAAY,CAACM,MAAb,GAAsB,IAAtB;AACA;;AACJ,iBAAKnE,SAAS,CAAC2E,IAAf;AACId,cAAAA,YAAY,CAACO,OAAb,GAAuB,IAAvB;AACA;;AACJ,iBAAKpE,SAAS,CAAC4E,IAAf;AACIf,cAAAA,YAAY,CAACQ,OAAb,GAAuB,IAAvB;AACA;AAZR;;AAeA,kBAAQ,KAAK1C,SAAb;AACI,iBAAK1B,QAAQ,CAAC4E,IAAd;AACIhB,cAAAA,YAAY,CAACC,QAAb,GAAwB,KAAxB;AACA;;AACJ,iBAAK7D,QAAQ,CAAC6E,QAAd;AACIjB,cAAAA,YAAY,CAACC,QAAb,GAAwB,IAAxB;AACA;AANR;;AASAF,UAAAA,GAAG,CAACmB,UAAJ,CAAe;AACXC,YAAAA,WAAW,EAAE,KAAKA,WADP;AAEXC,YAAAA,OAAO,EAAEpB,YAFE;AAGXqB,YAAAA,SAAS,EAAE,KAAKhD,SAAL,GAAiB,CAAjB,GAAqB;AAHrB,WAAf;AAMA,iBAAO0B,GAAP;AACH;;AAjPmD,O,UACrChD,Y,GAA0B,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,C;;;;;iBA4BXb,QAAQ,CAACoF,M;;gPAmBtCrF,Q;;;;;iBAC6B,G;;;;;;;iBAqBEE,SAAS,CAAC4E,I;;mPAmBzC9E,Q;;;;;iBAC8B,G;;;;;;;iBAqBDG,QAAQ,CAAC4E,I;;iPAmBtC/E,Q;;;;;iBAC6B,G","sourcesContent":["import { _decorator, Enum, log, Material, Texture2D, UITransform, Vec2 } from 'cc';\nimport { EDITOR_NOT_IN_PREVIEW } from 'cc/env';\nimport { SpriteEffectBase } from './SpriteEffectBase';\n\nconst { ccclass, property } = _decorator;\n\nexport enum ToneMode {\n    GRAY,\n    NEGA,\n    SEPIA,\n    NORMAL\n}\n\nexport enum ColorMode {\n    ADD,\n    SUB,\n    FILL,\n    MULT\n}\n\nexport enum BlurMode {\n    NONE,\n    GAUSSIAN\n}\n\n@ccclass('SpriteEffectColor')\nexport class SpriteEffectColor extends SpriteEffectBase {\n    private static _isPropDirty: boolean[] = [false, false, false];\n\n    protected isDirty(idx: number): boolean {\n        return SpriteEffectColor._isPropDirty[idx];\n    }\n    \n    protected setDirty(idx: number, val: boolean): void {\n        SpriteEffectColor._isPropDirty[idx] = val;\n    }\n\n    //#region toneMode\n    @property({ group: { name: \"Setter/Getter\", id: \"1\" }, type: Enum(ToneMode), tooltip: \"色調模式\" })\n    public set toneMode(val: ToneMode) {\n        this._toneMode = val;\n\n        if (EDITOR_NOT_IN_PREVIEW) {\n            this.init(this.countOfProps);\n            this.reflashParams();\n        } else {\n            this.reflashParams();\n        }\n    }\n\n    public get toneMode(): ToneMode {\n        return this._toneMode;\n    }\n\n    @property({ type: Enum(ToneMode) })\n    private _toneMode: ToneMode = ToneMode.NORMAL;\n    //#endregion\n\n    //#region toneFactor\n    @property({ group: { name: \"Setter/Getter\", id: \"1\" }, slide: true, range: [0, 1, 0.01], tooltip: \"色調程度\" })\n    public set toneFactor(val: number) {\n        this._toneFactor = val;\n\n        if (EDITOR_NOT_IN_PREVIEW) {\n            this.reflashParams();\n        } else {\n            this.reflashParams();\n        }\n    }\n\n    public get toneFactor(): number {\n        return this._toneFactor;\n    }\n\n    @property\n    private _toneFactor: number = 1.0;\n    //#endregion\n\n    //#region colorMode\n    @property({ group: { name: \"Setter/Getter\", id: \"1\" }, type: Enum(ColorMode), tooltip: \"顏色模式\" })\n    public set colorMode(val: ColorMode) {\n        this._colorMode = val;\n\n        if (EDITOR_NOT_IN_PREVIEW) {\n            this.init(this.countOfProps);\n            this.reflashParams();\n        } else {\n            this.reflashParams();\n        }\n    }\n\n    public get colorMode(): ColorMode {\n        return this._colorMode;\n    }\n\n    @property({ type: Enum(ColorMode) })\n    private _colorMode: ColorMode = ColorMode.MULT;\n    //#endregion\n\n    //#region colorFactor\n    @property({ group: { name: \"Setter/Getter\", id: \"1\" }, slide: true, range: [0, 1, 0.01], tooltip: \"顏色程度\" })\n    public set colorFactor(val: number) {\n        this._colorFactor = val;\n\n        if (EDITOR_NOT_IN_PREVIEW) {\n            this.reflashParams();\n        } else {\n            this.reflashParams();\n        }\n    }\n\n    public get colorFactor(): number {\n        return this._colorFactor;\n    }\n\n    @property\n    private _colorFactor: number = 1.0;\n    //#endregion\n\n    //#region blurMode\n    @property({ group: { name: \"Setter/Getter\", id: \"1\" }, type: Enum(BlurMode), tooltip: \"模糊模式\" })\n    public set blurMode(val: BlurMode) {\n        this._blurMode = val;\n\n        if (EDITOR_NOT_IN_PREVIEW) {\n            this.init(this.countOfProps);\n            this.reflashParams();\n        } else {\n            this.reflashParams();\n        }\n    }\n\n    public get blurMode(): BlurMode {\n        return this._blurMode;\n    }\n\n    @property({ type: Enum(BlurMode) })\n    private _blurMode: BlurMode = BlurMode.NONE;\n    //#endregion\n\n    //#region blurFactor\n    @property({ group: { name: \"Setter/Getter\", id: \"1\" }, slide: true, range: [0.0, 1.0, 0.01], tooltip: \"模糊程度\" })\n    public set blurFactor(val: number) {\n        this._blurFactor = val;\n\n        if (EDITOR_NOT_IN_PREVIEW) {\n            this.reflashParams();\n        } else {\n            this.reflashParams();\n        }\n    }\n\n    public get blurFactor(): number {\n        return this._blurFactor;\n    }\n\n    @property\n    private _blurFactor: number = 1.0;\n    //#endregion\n\n\n    //#region override\n    protected get countOfUsedFloats(): number {\n        return 13;\n    }\n\n    protected getPropsUnionKey(): string {\n        const unionKey = `${this.constructor.name}_${this._is2Din3D}_${this._toneMode}_${this._colorMode}_${this._blurMode}`;\n        return unionKey;\n    }\n\n    /**\n     * @override SpriteEffectBase\n     */\n    protected updateParams(index: number, propBuffer: Float32Array): void {\n        const baseUV = this.getUV(this.spriteFrame!.uv);\n\n        let blurTextureSize = new Vec2(100, 100);\n        if (this.spriteFrame) {\n            blurTextureSize.x = Math.floor(this.spriteFrame.width * baseUV.z);\n            blurTextureSize.y = Math.floor(this.spriteFrame.height * baseUV.w);\n        }\n        else {\n            blurTextureSize.x = this.node.getComponent(UITransform)!.contentSize.width;\n            blurTextureSize.y = this.node.getComponent(UITransform)!.contentSize.height;\n        }\n\n        propBuffer[index + 0] = this._effectColor.r / 255;\n        propBuffer[index + 1] = this._effectColor.g / 255;\n        propBuffer[index + 2] = this._effectColor.b / 255;\n        propBuffer[index + 3] = this._effectColor.a / 255;\n\n        propBuffer[index + 4] = baseUV.x;\n        propBuffer[index + 5] = baseUV.y;\n        propBuffer[index + 6] = baseUV.z;\n        propBuffer[index + 7] = baseUV.w;\n\n        propBuffer[index + 8] = blurTextureSize.x;\n        propBuffer[index + 9] = blurTextureSize.y;\n        // propBuffer[index + 10] = 0.0;\n        // propBuffer[index + 11] = 1.0;\n\n        propBuffer[index + 12] = this.toneFactor;\n        propBuffer[index + 13] = this.colorFactor;\n        propBuffer[index + 14] = this.blurFactor;\n        // propBuffer[index + 15] = 1.0;\n    }\n\n    /**\n     * @override SpriteEffectBase\n     */\n    protected initMaterial(): Material {\n        let mat = new Material();\n        let define_macro = {\n            USE_BLUR: false,\n            IS_GRAY: false,\n            IS_NEGA: false,\n            IS_SEPIA: false,\n            IS_ADD: false,\n            IS_SUB: false,\n            IS_FILL: false,\n            IS_MULT: true\n        };\n\n        switch (this._toneMode) {\n            case ToneMode.GRAY:\n                define_macro.IS_GRAY = true;\n                break;\n            case ToneMode.NEGA:\n                define_macro.IS_NEGA = true;\n                break;\n            case ToneMode.SEPIA:\n                define_macro.IS_SEPIA = true;\n                break;\n        };\n\n        switch (this._colorMode) {\n            case ColorMode.ADD:\n                define_macro.IS_ADD = true;\n                break;\n            case ColorMode.SUB:\n                define_macro.IS_SUB = true;\n                break;\n            case ColorMode.FILL:\n                define_macro.IS_FILL = true;\n                break;\n            case ColorMode.MULT:\n                define_macro.IS_MULT = true;\n                break;\n        }\n\n        switch (this._blurMode) {\n            case BlurMode.NONE:\n                define_macro.USE_BLUR = false;\n                break;\n            case BlurMode.GAUSSIAN:\n                define_macro.USE_BLUR = true;\n                break;\n        }\n\n        mat.initialize({\n            effectAsset: this.effectAsset,\n            defines: define_macro,\n            technique: this._is2Din3D ? 1 : 0\n        });\n\n        return mat;\n    }\n}"]}