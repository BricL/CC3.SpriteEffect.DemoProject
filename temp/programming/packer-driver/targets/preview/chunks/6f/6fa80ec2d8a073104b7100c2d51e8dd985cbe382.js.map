{"version":3,"sources":["file:///Users/kengyulin/Documents/MyProject/CC/CC3.SpriteEffect.Proj/extensions/sprite-effect/source/assets/comp/SpriteEffectGaussianBlur.ts"],"names":["_decorator","Material","UITransform","Vec2","EDITOR_NOT_IN_PREVIEW","SpriteEffectBase","ccclass","property","SpriteEffectGaussianBlur","group","name","id","slide","range","tooltip","isDirty","idx","_isPropDirty","setDirty","val","blurFactor","_blurFactor","reflashParams","countOfUsedFloats","getPropsUnionKey","constructor","_is2Din3D","updateParams","index","propBuffer","baseUV","getUV","spriteFrame","uv","blurTextureSize","x","Math","floor","width","z","y","height","w","node","getComponent","contentSize","_effectColor","r","g","b","a","initMaterial","mat","initialize","effectAsset","defines","technique"],"mappings":"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","sourcesContent":["import { _decorator, Color, Material, UITransform, Vec2 } from 'cc';\nimport { DEV, EDITOR_NOT_IN_PREVIEW } from 'cc/env';\nimport { SpriteEffectBase } from './SpriteEffectBase';\nconst { ccclass, property } = _decorator;\n\n\n@ccclass('SpriteEffectGaussianBlur')\nexport class SpriteEffectGaussianBlur extends SpriteEffectBase {\n    private static _isPropDirty: boolean[] = [false, false, false];\n\n    protected isDirty(idx: number): boolean {\n        return SpriteEffectGaussianBlur._isPropDirty[idx];\n    }\n    \n    protected setDirty(idx: number, val: boolean): void {\n        SpriteEffectGaussianBlur._isPropDirty[idx] = val;\n    }\n\n\n    //#region blur\n    @property({ group: { name: \"Setter/Getter\", id: \"1\" }, slide: true, range: [0.0, 1.0, 0.01], tooltip: '模糊程度' })\n    public set blurFactor(val: number) {\n        this._blurFactor = val;\n\n        if (EDITOR_NOT_IN_PREVIEW) {\n            this.reflashParams();\n        }\n        else {\n            this.reflashParams();\n        }\n    }\n    \n    public get blurFactor(): number {\n        return this._blurFactor;\n    }\n\n    @property\n    private _blurFactor: number = 0.5;\n    //#endregion\n\n\n    //#region override\n    /**\n     * @override SpriteEffectBase\n     */\n    protected get countOfUsedFloats(): number {\n        return 16;\n    }\n\n    /**\n     * @override SpriteEffectBase\n     */\n    protected getPropsUnionKey(): string {\n        return `${this.constructor.name}_${this._is2Din3D}`;\n    }\n\n    /**\n     * @override SpriteEffectBase\n     */\n    protected updateParams(index: number, propBuffer: Float32Array): void {\n        const baseUV = this.getUV(this.spriteFrame!.uv);\n\n        let blurTextureSize = new Vec2(100, 100);\n        if (this.spriteFrame) {\n            blurTextureSize.x = Math.floor(this.spriteFrame.width * baseUV.z);\n            blurTextureSize.y = Math.floor(this.spriteFrame.height * baseUV.w);\n        }\n        else {\n            blurTextureSize.x = this.node.getComponent(UITransform)!.contentSize.width;\n            blurTextureSize.y = this.node.getComponent(UITransform)!.contentSize.height;\n        }\n\n        propBuffer[index + 0] = this._effectColor.r / 255;\n        propBuffer[index + 1] = this._effectColor.g / 255;\n        propBuffer[index + 2] = this._effectColor.b / 255;\n        propBuffer[index + 3] = this._effectColor.a / 255;\n\n        propBuffer[index + 4] = baseUV.x;\n        propBuffer[index + 5] = baseUV.y;\n        propBuffer[index + 6] = baseUV.z;\n        propBuffer[index + 7] = baseUV.w;\n\n        propBuffer[index + 8] = blurTextureSize.x;\n        propBuffer[index + 9] = blurTextureSize.y;\n        propBuffer[index + 10] = this._blurFactor;\n    }\n\n    /**\n     * @override SpriteEffectBase\n     */\n    protected initMaterial(): Material {\n        let mat = new Material();\n        mat.initialize(\n            {\n                effectAsset: this.effectAsset,\n                defines: {},\n                technique: this._is2Din3D ? 1 : 0\n            }\n        );\n        return mat;\n    }\n}\n\n"]}