{"version":3,"sources":["file:///Users/kengyulin/Documents/MyProject/CC/CC3.SpriteEffect.DemoProject/extensions/sprite-effect/source/assets/comp/SpriteEffectDisappear.ts"],"names":["_decorator","Enum","Material","Texture2D","EDITOR_NOT_IN_PREVIEW","SpriteEffectBase","ccclass","property","Direction","SpriteEffectDisappear","type","tooltip","group","name","id","slide","range","isDirty","idx","_isPropDirty","setDirty","val","dirMode","_dirMode","init","countOfProps","reflashParams","offset","_offset","soft","_soft","countOfUsedFloats","getPropsUnionKey","constructor","_is2Din3D","updateParams","index","propBuffer","_effectColor","r","g","b","a","initMaterial","define_macro","DIR_VERTICAL","HORIZONTAL","VERTICAL","mat","initialize","effectAsset","defines","technique","setProperty","secondSprite"],"mappings":"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","sourcesContent":["import { _decorator, Color, Enum, Material, Texture2D } from 'cc';\nimport { DEV, EDITOR_NOT_IN_PREVIEW } from 'cc/env';\nimport { SpriteEffectBase } from './SpriteEffectBase';\n\nconst { ccclass, property } = _decorator;\n\nexport enum Direction {\n    HORIZONTAL,\n    VERTICAL\n}\n\n@ccclass('SpriteEffectDisappear')\nexport class SpriteEffectDisappear extends SpriteEffectBase {\n    private static _isPropDirty: boolean[] = [false, false, false];\n\n    protected isDirty(idx: number): boolean {\n        return SpriteEffectDisappear._isPropDirty[idx];\n    }\n    \n    protected setDirty(idx: number, val: boolean): void {\n        SpriteEffectDisappear._isPropDirty[idx] = val;\n    }\n\n\n\n    @property({ type: Texture2D, tooltip: '指定貼圖' })\n    public secondSprite: Texture2D | null = null;\n\n    //#region toneMode\n    @property({ group: { name: \"Setter/Getter\", id: \"1\" }, type: Enum(Direction), tooltip: '指定方向' })\n    public set dirMode(val: Direction) {\n        this._dirMode = val;\n\n        if (EDITOR_NOT_IN_PREVIEW) {\n            this.init(this.countOfProps);\n            this.reflashParams();\n        } else {\n            this.reflashParams();\n        }\n    }\n\n    public get dirMode(): Direction {\n        return this._dirMode;\n    }\n\n    @property\n    private _dirMode: Direction = Direction.VERTICAL;\n    //#endregion\n\n    //#region disappearOffset\n    @property({ group: { name: \"Setter/Getter\", id: \"1\" }, slide: true, range: [0, 1, 0.01], tooltip: '消失偏移' })\n    public set offset(val: number) {\n        this._offset = val;\n\n        if (EDITOR_NOT_IN_PREVIEW) {\n            this.reflashParams();\n        } else {\n            this.reflashParams();\n        }\n    }\n\n    public get offset(): number {\n        return this._offset;\n    }\n\n    @property\n    private _offset: number = 0.0;\n    //#endregion\n\n\n    //#region translucentOffset\n    @property({ group: { name: \"Setter/Getter\", id: \"1\" }, slide: true, range: [0, 0.5, 0.01], tooltip: '柔邊程度' })\n    public set soft(val: number) {\n        this._soft = val;\n\n        if (EDITOR_NOT_IN_PREVIEW) {\n            this.reflashParams();\n        } else {\n            this.reflashParams();\n        }\n    }\n\n    public get soft(): number {\n        return this._soft;\n    }\n\n    @property\n    private _soft: number = 0.0;\n    //#endregion\n\n\n    //#region override\n    /**\n     * @override SpriteEffectBase\n     */\n    protected get countOfUsedFloats(): number {\n        return 8;\n    }\n\n    /**\n     * @override SpriteEffectBase\n     */\n    protected getPropsUnionKey(): string {\n        return `${this.constructor.name}_${this._is2Din3D}_${this._dirMode}`;\n    }\n\n    /**\n     * @override SpriteEffectBase\n     */\n    protected updateParams(index: number, propBuffer: Float32Array): void {\n        propBuffer[index + 0] = this._effectColor.r / 255;\n        propBuffer[index + 1] = this._effectColor.g / 255;\n        propBuffer[index + 2] = this._effectColor.b / 255;\n        propBuffer[index + 3] = this._effectColor.a / 255;\n\n        propBuffer[index + 4] = this._offset;\n        propBuffer[index + 5] = this._soft;\n    }\n\n    /**\n     * @override SpriteEffectBase\n     */\n    protected initMaterial(): Material {\n        let define_macro = {\n            DIR_VERTICAL: true\n        };\n\n        switch (this._dirMode) {\n            case Direction.HORIZONTAL:\n                define_macro.DIR_VERTICAL = false;\n                break;\n            case Direction.VERTICAL:\n                define_macro.DIR_VERTICAL = true;\n                break;\n        }\n\n        let mat = new Material();\n        mat.initialize(\n            {\n                effectAsset: this.effectAsset,\n                defines: define_macro,\n                technique: this._is2Din3D ? 1 : 0\n            }\n        );\n\n        mat.setProperty('secondSprite', this.secondSprite);\n        return mat;\n    }\n}\n\n"]}