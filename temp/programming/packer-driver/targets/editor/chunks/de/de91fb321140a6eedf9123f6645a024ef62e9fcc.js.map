{"version":3,"sources":["file:///Users/kengyulin/Documents/MyProject/CC/CC3.SpriteEffect.DemoProject/extensions/sprite-effect/source/assets/comp/SpriteEffectBase.ts"],"names":["_decorator","Color","EffectAsset","error","log","Sprite","Texture2D","Vec4","EDITOR_NOT_IN_PREVIEW","ccclass","property","SpriteEffectBase","type","tooltip","group","name","id","_effectIndex","effectColor","val","_effectColor","reflashParams","is2Din3D","_is2Din3D","init","countOfProps","num","Math","ceil","countOfUsedFloats","unionKey","getPropsUnionKey","_s_effectMap","has","temp","Array","fill","set","get","findIndex","v","node","uuid","propGroupIdx","color","_s_effectProps","w","h","propBuffer","Float32Array","y","x","index","propsTexture","setFilters","Filter","NEAREST","reset","width","height","format","PixelFormat","RGBA32F","mipmapLevel","uploadData","mat","initMaterial","setProperty","propTexture","customMaterial","getBufferIndex","effectProps","updateParams","setDirty","floor","getUV","uv","minU","min","minV","maxU","max","maxV","quotient","fractional","onLoad","start","onDestroy","lateUpdate","dt","isDirty","constructor","Map"],"mappings":"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","sourcesContent":["import { _decorator, Color, EffectAsset, error, log, Material, Sprite, Texture2D, Vec4 } from \"cc\";\nimport { EDITOR_NOT_IN_PREVIEW } from \"cc/env\";\nconst { ccclass, property } = _decorator;\n\nexport type EffectProps = {\n    mat: Material | null;\n    propBuffer: Float32Array | null;\n    propTexture: Texture2D | null;\n}\n\n@ccclass('SpriteEffectBase')\nexport abstract class SpriteEffectBase extends Sprite {\n    protected static _s_effectMap = new Map<string, string[]>();\n    protected static _s_effectProps = new Map<string, EffectProps[]>();\n\n    @property({ type: EffectAsset, tooltip: '指定效果EffectAsset' })\n    public effectAsset: EffectAsset | null = null;\n\n    protected _effectIndex: number = -1;\n\n    //#region effectColor\n    @property({ group: { name: \"Setter/Getter\", id: \"1\" }, type: Color, tooltip: \"My Color\" })\n    public set effectColor(val: Color) {\n        this._effectColor = val;\n\n        if (EDITOR_NOT_IN_PREVIEW) {\n            this.reflashParams();\n        }\n        else {\n            this.reflashParams();\n        }\n    }\n\n    public get effectColor(): Color {\n        return this._effectColor;\n    }\n\n    @property\n    protected _effectColor: Color = new Color(255, 255, 255, 255);\n    //#endregion\n\n\n    //#region is2Din3D\n    @property({ group: { name: \"Setter/Getter\", id: \"1\" }, tooltip: '當使用RenderRoot2D時使用' })\n    public set is2Din3D(val: boolean) {\n        this._is2Din3D = val;\n\n        if (EDITOR_NOT_IN_PREVIEW) {\n            this.init(this.countOfProps);\n            this.reflashParams();\n        }\n        else {\n            this.reflashParams();\n        }\n    }\n\n    public get is2Din3D(): boolean {\n        return this._is2Din3D;\n    }\n\n    @property\n    protected _is2Din3D: boolean = false;\n    //#endregion\n\n\n    //#region abstract methods\n    /**\n     * @abstract\n     * Return the count of used floats of the effect.\n     */\n    protected abstract get countOfUsedFloats(): number;\n\n    /**\n     * @abstract \n     * Generate a Union key for the effect.\n     */\n    protected abstract getPropsUnionKey(): string;\n\n    /**\n     * @abstract\n     * Update the effect parameters.\n     */\n    protected abstract updateParams(index: number, propBuffer: Float32Array): void;\n\n    /**\n     * @abstract\n     * Initialize the material.\n     * @returns Material\n    */\n    protected abstract initMaterial(): Material;\n\n    protected abstract isDirty(idx: number): boolean;\n    protected abstract setDirty(idx: number, val: boolean): void;\n    //#endregion\n\n\n    //#region methods\n    protected get countOfProps(): number {\n        const num = Math.ceil(this.countOfUsedFloats / 4.0);\n        return num;\n    }\n\n    protected init(countOfProps: number): void {\n        const unionKey = this.getPropsUnionKey();\n        log(`init: ${unionKey}`);\n\n        // Step1: 取的當前的effectIndex\n        if (!SpriteEffectBase._s_effectMap.has(unionKey)) {\n            const temp = new Array(768).fill(\"\");  // R/G/B (0~255) => 256 * 3 = 768\n            SpriteEffectBase._s_effectMap.set(unionKey, temp);\n        }\n\n        this._effectIndex = SpriteEffectBase._s_effectMap.get(unionKey)!.findIndex((v) => v === this.node.uuid);\n        if (this._effectIndex === -1) {\n            this._effectIndex = SpriteEffectBase._s_effectMap.get(unionKey)!.findIndex((v) => v === \"\");\n            if (this._effectIndex === -1) {\n                error(\"Effect map is full!\");\n                return;\n            }\n        }\n\n        SpriteEffectBase._s_effectMap.get(unionKey)![this._effectIndex] = this.node.uuid;\n\n        if (this.propGroupIdx === 0) {\n            this.color = new Color(this._effectIndex, 0, 0, 255);\n        } else if (this.propGroupIdx === 1) {\n            this.color = new Color(255, (this._effectIndex - 256 + 1), 0, 255);\n        } else if (this.propGroupIdx === 2) {\n            this.color = new Color(255, 255, (this._effectIndex - 256 - 256 + 1), 255);\n        } else {\n            error(`The prop group index, ${this.propGroupIdx}, is out of range!`);\n            return;\n        }\n\n        // Step2: 初始化Effect props\n        if (!SpriteEffectBase._s_effectProps.has(unionKey)) {\n            const temp = new Array(3).fill(null); // Only use R/G/B 3 channels\n            SpriteEffectBase._s_effectProps.set(unionKey, temp);\n        }\n\n        if (SpriteEffectBase._s_effectProps.get(unionKey)![this.propGroupIdx] === null) {\n            const w = 256 * countOfProps;\n            const h = 1;\n\n            let propBuffer = new Float32Array(w * h * 4);\n            for (let y = 0; y < h; y++) {\n                for (let x = 0; x < w; x++) {\n                    const index = (y * w + x) * 4;\n                    propBuffer[index] = 1;\n                    propBuffer[index + 1] = 0;\n                    propBuffer[index + 2] = 1;\n                    propBuffer[index + 3] = 1;\n                }\n            }\n\n            let propsTexture = new Texture2D();\n            propsTexture.setFilters(Texture2D.Filter.NEAREST, Texture2D.Filter.NEAREST);\n            propsTexture.reset({\n                width: w,\n                height: h,\n                format: Texture2D.PixelFormat.RGBA32F,\n                mipmapLevel: 0\n            });\n            propsTexture.uploadData(propBuffer);\n\n            let mat = this.initMaterial();\n            mat.setProperty('propsTexture', propsTexture);\n\n            SpriteEffectBase._s_effectProps.get(unionKey)![this.propGroupIdx] = {\n                mat: mat,\n                propBuffer: propBuffer,\n                propTexture: propsTexture\n            };\n        }\n\n        this.customMaterial = SpriteEffectBase._s_effectProps.get(unionKey)![this.propGroupIdx].mat;\n    }\n\n    protected reflashParams(): void {\n        const index = this.getBufferIndex();\n        const effectProps = SpriteEffectBase._s_effectProps.get(this.getPropsUnionKey())![this.propGroupIdx];\n        this.updateParams(index, effectProps.propBuffer!);\n\n        if (EDITOR_NOT_IN_PREVIEW) {\n            effectProps.propTexture!.uploadData(effectProps.propBuffer!);\n        }\n        else {\n            this.setDirty(this.propGroupIdx, true);\n        }\n    }\n\n    protected get propGroupIdx(): number {\n        return Math.floor(this._effectIndex / 256);\n    }\n\n    protected getUV(uv: number[]): Vec4 {\n        let minU = Math.min(uv[0], uv[2], uv[4], uv[6]);\n        let minV = Math.min(uv[1], uv[3], uv[5], uv[7]);\n\n        let maxU = Math.max(uv[0], uv[2], uv[4], uv[6]);\n        let maxV = Math.max(uv[1], uv[3], uv[5], uv[7]);\n\n        let width = maxU - minU;\n        let height = maxV - minV;\n\n        return new Vec4(minU, minV, width, height);\n    }\n\n    protected getBufferIndex(): number {\n        let quotient = this._effectIndex / 256;\n        let fractional = quotient - Math.floor(quotient);\n        let x = Math.floor(fractional * (256 * this.countOfProps));\n        const index = x * 4;\n        return index;\n    }\n    //#endregion\n\n\n    //#region life cycle\n    onLoad(): void {\n        this.init(this.countOfProps);\n    }\n\n    start() {\n        this.reflashParams();\n    }\n\n    onDestroy(): void {\n        const unionKey = this.getPropsUnionKey();\n\n        if (SpriteEffectBase._s_effectMap.has(unionKey)) {\n            const index = SpriteEffectBase._s_effectMap.get(unionKey)!.findIndex((v) => v === this.node.uuid);\n            if (index === -1) {\n                error(\"Effect index is not found!\");\n                return;\n            }\n\n            SpriteEffectBase._s_effectMap.get(unionKey)![index] = \"\";\n        } else {\n            error(`The effect map of ${unionKey} is not found!`);\n        }\n    }\n\n    lateUpdate(dt: number): void {\n        if (this.isDirty(this.propGroupIdx)) {\n            log(`${this.constructor.name}'s effect props is DIRTY!`);\n            const unionKey = this.getPropsUnionKey();\n            const effectProps = SpriteEffectBase._s_effectProps.get(unionKey)![this.propGroupIdx];\n            \n            effectProps.propTexture!.uploadData(effectProps.propBuffer!);\n            this.setDirty(this.propGroupIdx, false);\n        }\n    }\n}"]}